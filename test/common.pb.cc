// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#include "common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace sea_proto {
class ErrorInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ErrorInfo>
      _instance;
} _ErrorInfo_default_instance_;
class ClientInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientInfo>
      _instance;
} _ClientInfo_default_instance_;
class GPSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GPS>
      _instance;
} _GPS_default_instance_;
}  // namespace sea_proto
namespace protobuf_common_2eproto {
void InitDefaultsErrorInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::sea_proto::_ErrorInfo_default_instance_;
    new (ptr) ::sea_proto::ErrorInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sea_proto::ErrorInfo::InitAsDefaultInstance();
}

void InitDefaultsErrorInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsErrorInfoImpl);
}

void InitDefaultsClientInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2eproto::InitDefaultsGPS();
  {
    void* ptr = &::sea_proto::_ClientInfo_default_instance_;
    new (ptr) ::sea_proto::ClientInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sea_proto::ClientInfo::InitAsDefaultInstance();
}

void InitDefaultsClientInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClientInfoImpl);
}

void InitDefaultsGPSImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::sea_proto::_GPS_default_instance_;
    new (ptr) ::sea_proto::GPS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sea_proto::GPS::InitAsDefaultInstance();
}

void InitDefaultsGPS() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGPSImpl);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sea_proto::ErrorInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sea_proto::ErrorInfo, err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sea_proto::ErrorInfo, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sea_proto::ClientInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sea_proto::ClientInfo, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sea_proto::ClientInfo, dev_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sea_proto::ClientInfo, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sea_proto::ClientInfo, gps_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sea_proto::GPS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sea_proto::GPS, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sea_proto::GPS, latitude_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::sea_proto::ErrorInfo)},
  { 7, -1, sizeof(::sea_proto::ClientInfo)},
  { 16, -1, sizeof(::sea_proto::GPS)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::sea_proto::_ErrorInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sea_proto::_ClientInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sea_proto::_GPS_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "common.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014common.proto\022\tsea_proto\032\037google/protob"
      "uf/timestamp.proto\"\262\002\n\tErrorInfo\022+\n\003err\030"
      "\001 \001(\0162\036.sea_proto.ErrorInfo.ErrorCode\022\013\n"
      "\003msg\030\002 \001(\t\"\352\001\n\tErrorCode\022\006\n\002OK\020\000\022\t\n\005ERRO"
      "R\020\001\022\013\n\007INVALID\020\002\022\r\n\tNOT_FOUND\020\003\022\016\n\nNO_SE"
      "RVICE\020\004\022\n\n\006DENIED\020\005\022\013\n\007NETWORK\020\006\022\013\n\007DB_F"
      "AIL\020\007\022\013\n\007TIMEOUT\020\010\022\020\n\013VERIFY_FAIL\020\351\007\022\016\n\t"
      "AUTH_FAIL\020\352\007\022\022\n\rPHONE_EXISTED\020\353\007\022\022\n\rSESS"
      "ION_ERROR\020\354\007\022\021\n\014TALK_REFUSED\020\321\017\022\016\n\tTALK_"
      "FAIL\020\322\017\"V\n\nClientInfo\022\013\n\003uid\030\001 \001(\003\022\017\n\007de"
      "v_key\030\002 \001(\t\022\r\n\005token\030\003 \001(\t\022\033\n\003gps\030\004 \001(\0132"
      "\016.sea_proto.GPS\"*\n\003GPS\022\021\n\tlongitude\030\001 \001("
      "\001\022\020\n\010latitude\030\002 \001(\001BH\n\024top.ffox.CommonPr"
      "otoB\013CommonProto\242\002\013COMMONPROTO\252\002\024top.ffo"
      "x.CommonProtob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 581);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_common_2eproto
namespace sea_proto {
const ::google::protobuf::EnumDescriptor* ErrorInfo_ErrorCode_descriptor() {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2eproto::file_level_enum_descriptors[0];
}
bool ErrorInfo_ErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 2001:
    case 2002:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ErrorInfo_ErrorCode ErrorInfo::OK;
const ErrorInfo_ErrorCode ErrorInfo::ERROR;
const ErrorInfo_ErrorCode ErrorInfo::INVALID;
const ErrorInfo_ErrorCode ErrorInfo::NOT_FOUND;
const ErrorInfo_ErrorCode ErrorInfo::NO_SERVICE;
const ErrorInfo_ErrorCode ErrorInfo::DENIED;
const ErrorInfo_ErrorCode ErrorInfo::NETWORK;
const ErrorInfo_ErrorCode ErrorInfo::DB_FAIL;
const ErrorInfo_ErrorCode ErrorInfo::TIMEOUT;
const ErrorInfo_ErrorCode ErrorInfo::VERIFY_FAIL;
const ErrorInfo_ErrorCode ErrorInfo::AUTH_FAIL;
const ErrorInfo_ErrorCode ErrorInfo::PHONE_EXISTED;
const ErrorInfo_ErrorCode ErrorInfo::SESSION_ERROR;
const ErrorInfo_ErrorCode ErrorInfo::TALK_REFUSED;
const ErrorInfo_ErrorCode ErrorInfo::TALK_FAIL;
const ErrorInfo_ErrorCode ErrorInfo::ErrorCode_MIN;
const ErrorInfo_ErrorCode ErrorInfo::ErrorCode_MAX;
const int ErrorInfo::ErrorCode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ErrorInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorInfo::kErrFieldNumber;
const int ErrorInfo::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorInfo::ErrorInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2eproto::InitDefaultsErrorInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sea_proto.ErrorInfo)
}
ErrorInfo::ErrorInfo(const ErrorInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  err_ = from.err_;
  // @@protoc_insertion_point(copy_constructor:sea_proto.ErrorInfo)
}

void ErrorInfo::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_ = 0;
  _cached_size_ = 0;
}

ErrorInfo::~ErrorInfo() {
  // @@protoc_insertion_point(destructor:sea_proto.ErrorInfo)
  SharedDtor();
}

void ErrorInfo::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ErrorInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorInfo::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ErrorInfo& ErrorInfo::default_instance() {
  ::protobuf_common_2eproto::InitDefaultsErrorInfo();
  return *internal_default_instance();
}


void ErrorInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:sea_proto.ErrorInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_ = 0;
  _internal_metadata_.Clear();
}

bool ErrorInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sea_proto.ErrorInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .sea_proto.ErrorInfo.ErrorCode err = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_err(static_cast< ::sea_proto::ErrorInfo_ErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sea_proto.ErrorInfo.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sea_proto.ErrorInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sea_proto.ErrorInfo)
  return false;
#undef DO_
}

void ErrorInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sea_proto.ErrorInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sea_proto.ErrorInfo.ErrorCode err = 1;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->err(), output);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sea_proto.ErrorInfo.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sea_proto.ErrorInfo)
}

::google::protobuf::uint8* ErrorInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sea_proto.ErrorInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sea_proto.ErrorInfo.ErrorCode err = 1;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->err(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sea_proto.ErrorInfo.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sea_proto.ErrorInfo)
  return target;
}

size_t ErrorInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sea_proto.ErrorInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // .sea_proto.ErrorInfo.ErrorCode err = 1;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->err());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sea_proto.ErrorInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sea_proto.ErrorInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sea_proto.ErrorInfo)
    MergeFrom(*source);
  }
}

void ErrorInfo::MergeFrom(const ErrorInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sea_proto.ErrorInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.err() != 0) {
    set_err(from.err());
  }
}

void ErrorInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sea_proto.ErrorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorInfo::CopyFrom(const ErrorInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sea_proto.ErrorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorInfo::IsInitialized() const {
  return true;
}

void ErrorInfo::Swap(ErrorInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorInfo::InternalSwap(ErrorInfo* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  swap(err_, other->err_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ErrorInfo::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientInfo::InitAsDefaultInstance() {
  ::sea_proto::_ClientInfo_default_instance_._instance.get_mutable()->gps_ = const_cast< ::sea_proto::GPS*>(
      ::sea_proto::GPS::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientInfo::kUidFieldNumber;
const int ClientInfo::kDevKeyFieldNumber;
const int ClientInfo::kTokenFieldNumber;
const int ClientInfo::kGpsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientInfo::ClientInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2eproto::InitDefaultsClientInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sea_proto.ClientInfo)
}
ClientInfo::ClientInfo(const ClientInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dev_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dev_key().size() > 0) {
    dev_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dev_key_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_gps()) {
    gps_ = new ::sea_proto::GPS(*from.gps_);
  } else {
    gps_ = NULL;
  }
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:sea_proto.ClientInfo)
}

void ClientInfo::SharedCtor() {
  dev_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gps_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&gps_)) + sizeof(uid_));
  _cached_size_ = 0;
}

ClientInfo::~ClientInfo() {
  // @@protoc_insertion_point(destructor:sea_proto.ClientInfo)
  SharedDtor();
}

void ClientInfo::SharedDtor() {
  dev_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete gps_;
}

void ClientInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientInfo::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientInfo& ClientInfo::default_instance() {
  ::protobuf_common_2eproto::InitDefaultsClientInfo();
  return *internal_default_instance();
}


void ClientInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:sea_proto.ClientInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dev_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && gps_ != NULL) {
    delete gps_;
  }
  gps_ = NULL;
  uid_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ClientInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sea_proto.ClientInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dev_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dev_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dev_key().data(), static_cast<int>(this->dev_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sea_proto.ClientInfo.dev_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sea_proto.ClientInfo.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sea_proto.GPS gps = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sea_proto.ClientInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sea_proto.ClientInfo)
  return false;
#undef DO_
}

void ClientInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sea_proto.ClientInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uid(), output);
  }

  // string dev_key = 2;
  if (this->dev_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dev_key().data(), static_cast<int>(this->dev_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sea_proto.ClientInfo.dev_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dev_key(), output);
  }

  // string token = 3;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sea_proto.ClientInfo.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->token(), output);
  }

  // .sea_proto.GPS gps = 4;
  if (this->has_gps()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *gps_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sea_proto.ClientInfo)
}

::google::protobuf::uint8* ClientInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sea_proto.ClientInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uid(), target);
  }

  // string dev_key = 2;
  if (this->dev_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dev_key().data(), static_cast<int>(this->dev_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sea_proto.ClientInfo.dev_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dev_key(), target);
  }

  // string token = 3;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sea_proto.ClientInfo.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->token(), target);
  }

  // .sea_proto.GPS gps = 4;
  if (this->has_gps()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *gps_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sea_proto.ClientInfo)
  return target;
}

size_t ClientInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sea_proto.ClientInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string dev_key = 2;
  if (this->dev_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dev_key());
  }

  // string token = 3;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // .sea_proto.GPS gps = 4;
  if (this->has_gps()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gps_);
  }

  // int64 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sea_proto.ClientInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sea_proto.ClientInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sea_proto.ClientInfo)
    MergeFrom(*source);
  }
}

void ClientInfo::MergeFrom(const ClientInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sea_proto.ClientInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dev_key().size() > 0) {

    dev_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dev_key_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_gps()) {
    mutable_gps()->::sea_proto::GPS::MergeFrom(from.gps());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void ClientInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sea_proto.ClientInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientInfo::CopyFrom(const ClientInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sea_proto.ClientInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientInfo::IsInitialized() const {
  return true;
}

void ClientInfo::Swap(ClientInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientInfo::InternalSwap(ClientInfo* other) {
  using std::swap;
  dev_key_.Swap(&other->dev_key_);
  token_.Swap(&other->token_);
  swap(gps_, other->gps_);
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientInfo::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GPS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GPS::kLongitudeFieldNumber;
const int GPS::kLatitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GPS::GPS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2eproto::InitDefaultsGPS();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:sea_proto.GPS)
}
GPS::GPS(const GPS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&longitude_, &from.longitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&latitude_) -
    reinterpret_cast<char*>(&longitude_)) + sizeof(latitude_));
  // @@protoc_insertion_point(copy_constructor:sea_proto.GPS)
}

void GPS::SharedCtor() {
  ::memset(&longitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latitude_) -
      reinterpret_cast<char*>(&longitude_)) + sizeof(latitude_));
  _cached_size_ = 0;
}

GPS::~GPS() {
  // @@protoc_insertion_point(destructor:sea_proto.GPS)
  SharedDtor();
}

void GPS::SharedDtor() {
}

void GPS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GPS::descriptor() {
  ::protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GPS& GPS::default_instance() {
  ::protobuf_common_2eproto::InitDefaultsGPS();
  return *internal_default_instance();
}


void GPS::Clear() {
// @@protoc_insertion_point(message_clear_start:sea_proto.GPS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&longitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latitude_) -
      reinterpret_cast<char*>(&longitude_)) + sizeof(latitude_));
  _internal_metadata_.Clear();
}

bool GPS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sea_proto.GPS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double longitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double latitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sea_proto.GPS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sea_proto.GPS)
  return false;
#undef DO_
}

void GPS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sea_proto.GPS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double longitude = 1;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->longitude(), output);
  }

  // double latitude = 2;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->latitude(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sea_proto.GPS)
}

::google::protobuf::uint8* GPS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sea_proto.GPS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double longitude = 1;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->longitude(), target);
  }

  // double latitude = 2;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->latitude(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sea_proto.GPS)
  return target;
}

size_t GPS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sea_proto.GPS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double longitude = 1;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  // double latitude = 2;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GPS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sea_proto.GPS)
  GOOGLE_DCHECK_NE(&from, this);
  const GPS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GPS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sea_proto.GPS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sea_proto.GPS)
    MergeFrom(*source);
  }
}

void GPS::MergeFrom(const GPS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sea_proto.GPS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
}

void GPS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sea_proto.GPS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GPS::CopyFrom(const GPS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sea_proto.GPS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GPS::IsInitialized() const {
  return true;
}

void GPS::Swap(GPS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GPS::InternalSwap(GPS* other) {
  using std::swap;
  swap(longitude_, other->longitude_);
  swap(latitude_, other->latitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GPS::GetMetadata() const {
  protobuf_common_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sea_proto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sea_proto::ErrorInfo* Arena::Create< ::sea_proto::ErrorInfo >(Arena* arena) {
  return Arena::CreateInternal< ::sea_proto::ErrorInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sea_proto::ClientInfo* Arena::Create< ::sea_proto::ClientInfo >(Arena* arena) {
  return Arena::CreateInternal< ::sea_proto::ClientInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sea_proto::GPS* Arena::Create< ::sea_proto::GPS >(Arena* arena) {
  return Arena::CreateInternal< ::sea_proto::GPS >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
