// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user.proto

#ifndef PROTOBUF_user_2eproto_INCLUDED
#define PROTOBUF_user_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_user_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsUserBasicInfoImpl();
void InitDefaultsUserBasicInfo();
inline void InitDefaults() {
  InitDefaultsUserBasicInfo();
}
}  // namespace protobuf_user_2eproto
namespace user_proto {
class UserBasicInfo;
class UserBasicInfoDefaultTypeInternal;
extern UserBasicInfoDefaultTypeInternal _UserBasicInfo_default_instance_;
}  // namespace user_proto
namespace google {
namespace protobuf {
template<> ::user_proto::UserBasicInfo* Arena::Create< ::user_proto::UserBasicInfo>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace user_proto {

enum UserBasicInfo_Gender {
  UserBasicInfo_Gender_GENDER_NA = 0,
  UserBasicInfo_Gender_MALE = 1,
  UserBasicInfo_Gender_FEMALE = 2,
  UserBasicInfo_Gender_UserBasicInfo_Gender_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UserBasicInfo_Gender_UserBasicInfo_Gender_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UserBasicInfo_Gender_IsValid(int value);
const UserBasicInfo_Gender UserBasicInfo_Gender_Gender_MIN = UserBasicInfo_Gender_GENDER_NA;
const UserBasicInfo_Gender UserBasicInfo_Gender_Gender_MAX = UserBasicInfo_Gender_FEMALE;
const int UserBasicInfo_Gender_Gender_ARRAYSIZE = UserBasicInfo_Gender_Gender_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserBasicInfo_Gender_descriptor();
inline const ::std::string& UserBasicInfo_Gender_Name(UserBasicInfo_Gender value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserBasicInfo_Gender_descriptor(), value);
}
inline bool UserBasicInfo_Gender_Parse(
    const ::std::string& name, UserBasicInfo_Gender* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserBasicInfo_Gender>(
    UserBasicInfo_Gender_descriptor(), name, value);
}
// ===================================================================

class UserBasicInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:user_proto.UserBasicInfo) */ {
 public:
  UserBasicInfo();
  virtual ~UserBasicInfo();

  UserBasicInfo(const UserBasicInfo& from);

  inline UserBasicInfo& operator=(const UserBasicInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserBasicInfo(UserBasicInfo&& from) noexcept
    : UserBasicInfo() {
    *this = ::std::move(from);
  }

  inline UserBasicInfo& operator=(UserBasicInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserBasicInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserBasicInfo* internal_default_instance() {
    return reinterpret_cast<const UserBasicInfo*>(
               &_UserBasicInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(UserBasicInfo* other);
  friend void swap(UserBasicInfo& a, UserBasicInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserBasicInfo* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<UserBasicInfo>(NULL);
  }

  UserBasicInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<UserBasicInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserBasicInfo& from);
  void MergeFrom(const UserBasicInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserBasicInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef UserBasicInfo_Gender Gender;
  static const Gender GENDER_NA =
    UserBasicInfo_Gender_GENDER_NA;
  static const Gender MALE =
    UserBasicInfo_Gender_MALE;
  static const Gender FEMALE =
    UserBasicInfo_Gender_FEMALE;
  static inline bool Gender_IsValid(int value) {
    return UserBasicInfo_Gender_IsValid(value);
  }
  static const Gender Gender_MIN =
    UserBasicInfo_Gender_Gender_MIN;
  static const Gender Gender_MAX =
    UserBasicInfo_Gender_Gender_MAX;
  static const int Gender_ARRAYSIZE =
    UserBasicInfo_Gender_Gender_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Gender_descriptor() {
    return UserBasicInfo_Gender_descriptor();
  }
  static inline const ::std::string& Gender_Name(Gender value) {
    return UserBasicInfo_Gender_Name(value);
  }
  static inline bool Gender_Parse(const ::std::string& name,
      Gender* value) {
    return UserBasicInfo_Gender_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string phone = 3;
  void clear_phone();
  static const int kPhoneFieldNumber = 3;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // string email = 4;
  void clear_email();
  static const int kEmailFieldNumber = 4;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // string passwd = 6;
  void clear_passwd();
  static const int kPasswdFieldNumber = 6;
  const ::std::string& passwd() const;
  void set_passwd(const ::std::string& value);
  #if LANG_CXX11
  void set_passwd(::std::string&& value);
  #endif
  void set_passwd(const char* value);
  void set_passwd(const char* value, size_t size);
  ::std::string* mutable_passwd();
  ::std::string* release_passwd();
  void set_allocated_passwd(::std::string* passwd);

  // string image = 7;
  void clear_image();
  static const int kImageFieldNumber = 7;
  const ::std::string& image() const;
  void set_image(const ::std::string& value);
  #if LANG_CXX11
  void set_image(::std::string&& value);
  #endif
  void set_image(const char* value);
  void set_image(const char* value, size_t size);
  ::std::string* mutable_image();
  ::std::string* release_image();
  void set_allocated_image(::std::string* image);

  // int64 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // int64 signup_time = 9;
  void clear_signup_time();
  static const int kSignupTimeFieldNumber = 9;
  ::google::protobuf::int64 signup_time() const;
  void set_signup_time(::google::protobuf::int64 value);

  // .user_proto.UserBasicInfo.Gender gender = 5;
  void clear_gender();
  static const int kGenderFieldNumber = 5;
  ::user_proto::UserBasicInfo_Gender gender() const;
  void set_gender(::user_proto::UserBasicInfo_Gender value);

  // @@protoc_insertion_point(class_scope:user_proto.UserBasicInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr passwd_;
  ::google::protobuf::internal::ArenaStringPtr image_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int64 signup_time_;
  int gender_;
  mutable int _cached_size_;
  friend struct ::protobuf_user_2eproto::TableStruct;
  friend void ::protobuf_user_2eproto::InitDefaultsUserBasicInfoImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UserBasicInfo

// int64 uid = 1;
inline void UserBasicInfo::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UserBasicInfo::uid() const {
  // @@protoc_insertion_point(field_get:user_proto.UserBasicInfo.uid)
  return uid_;
}
inline void UserBasicInfo::set_uid(::google::protobuf::int64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:user_proto.UserBasicInfo.uid)
}

// string name = 2;
inline void UserBasicInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserBasicInfo::name() const {
  // @@protoc_insertion_point(field_get:user_proto.UserBasicInfo.name)
  return name_.GetNoArena();
}
inline void UserBasicInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:user_proto.UserBasicInfo.name)
}
#if LANG_CXX11
inline void UserBasicInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:user_proto.UserBasicInfo.name)
}
#endif
inline void UserBasicInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:user_proto.UserBasicInfo.name)
}
inline void UserBasicInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:user_proto.UserBasicInfo.name)
}
inline ::std::string* UserBasicInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:user_proto.UserBasicInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserBasicInfo::release_name() {
  // @@protoc_insertion_point(field_release:user_proto.UserBasicInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserBasicInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:user_proto.UserBasicInfo.name)
}

// string phone = 3;
inline void UserBasicInfo::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserBasicInfo::phone() const {
  // @@protoc_insertion_point(field_get:user_proto.UserBasicInfo.phone)
  return phone_.GetNoArena();
}
inline void UserBasicInfo::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:user_proto.UserBasicInfo.phone)
}
#if LANG_CXX11
inline void UserBasicInfo::set_phone(::std::string&& value) {
  
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:user_proto.UserBasicInfo.phone)
}
#endif
inline void UserBasicInfo::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:user_proto.UserBasicInfo.phone)
}
inline void UserBasicInfo::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:user_proto.UserBasicInfo.phone)
}
inline ::std::string* UserBasicInfo::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:user_proto.UserBasicInfo.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserBasicInfo::release_phone() {
  // @@protoc_insertion_point(field_release:user_proto.UserBasicInfo.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserBasicInfo::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:user_proto.UserBasicInfo.phone)
}

// string email = 4;
inline void UserBasicInfo::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserBasicInfo::email() const {
  // @@protoc_insertion_point(field_get:user_proto.UserBasicInfo.email)
  return email_.GetNoArena();
}
inline void UserBasicInfo::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:user_proto.UserBasicInfo.email)
}
#if LANG_CXX11
inline void UserBasicInfo::set_email(::std::string&& value) {
  
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:user_proto.UserBasicInfo.email)
}
#endif
inline void UserBasicInfo::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:user_proto.UserBasicInfo.email)
}
inline void UserBasicInfo::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:user_proto.UserBasicInfo.email)
}
inline ::std::string* UserBasicInfo::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:user_proto.UserBasicInfo.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserBasicInfo::release_email() {
  // @@protoc_insertion_point(field_release:user_proto.UserBasicInfo.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserBasicInfo::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:user_proto.UserBasicInfo.email)
}

// .user_proto.UserBasicInfo.Gender gender = 5;
inline void UserBasicInfo::clear_gender() {
  gender_ = 0;
}
inline ::user_proto::UserBasicInfo_Gender UserBasicInfo::gender() const {
  // @@protoc_insertion_point(field_get:user_proto.UserBasicInfo.gender)
  return static_cast< ::user_proto::UserBasicInfo_Gender >(gender_);
}
inline void UserBasicInfo::set_gender(::user_proto::UserBasicInfo_Gender value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:user_proto.UserBasicInfo.gender)
}

// string passwd = 6;
inline void UserBasicInfo::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserBasicInfo::passwd() const {
  // @@protoc_insertion_point(field_get:user_proto.UserBasicInfo.passwd)
  return passwd_.GetNoArena();
}
inline void UserBasicInfo::set_passwd(const ::std::string& value) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:user_proto.UserBasicInfo.passwd)
}
#if LANG_CXX11
inline void UserBasicInfo::set_passwd(::std::string&& value) {
  
  passwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:user_proto.UserBasicInfo.passwd)
}
#endif
inline void UserBasicInfo::set_passwd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:user_proto.UserBasicInfo.passwd)
}
inline void UserBasicInfo::set_passwd(const char* value, size_t size) {
  
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:user_proto.UserBasicInfo.passwd)
}
inline ::std::string* UserBasicInfo::mutable_passwd() {
  
  // @@protoc_insertion_point(field_mutable:user_proto.UserBasicInfo.passwd)
  return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserBasicInfo::release_passwd() {
  // @@protoc_insertion_point(field_release:user_proto.UserBasicInfo.passwd)
  
  return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserBasicInfo::set_allocated_passwd(::std::string* passwd) {
  if (passwd != NULL) {
    
  } else {
    
  }
  passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:user_proto.UserBasicInfo.passwd)
}

// string image = 7;
inline void UserBasicInfo::clear_image() {
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserBasicInfo::image() const {
  // @@protoc_insertion_point(field_get:user_proto.UserBasicInfo.image)
  return image_.GetNoArena();
}
inline void UserBasicInfo::set_image(const ::std::string& value) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:user_proto.UserBasicInfo.image)
}
#if LANG_CXX11
inline void UserBasicInfo::set_image(::std::string&& value) {
  
  image_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:user_proto.UserBasicInfo.image)
}
#endif
inline void UserBasicInfo::set_image(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:user_proto.UserBasicInfo.image)
}
inline void UserBasicInfo::set_image(const char* value, size_t size) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:user_proto.UserBasicInfo.image)
}
inline ::std::string* UserBasicInfo::mutable_image() {
  
  // @@protoc_insertion_point(field_mutable:user_proto.UserBasicInfo.image)
  return image_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserBasicInfo::release_image() {
  // @@protoc_insertion_point(field_release:user_proto.UserBasicInfo.image)
  
  return image_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserBasicInfo::set_allocated_image(::std::string* image) {
  if (image != NULL) {
    
  } else {
    
  }
  image_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image);
  // @@protoc_insertion_point(field_set_allocated:user_proto.UserBasicInfo.image)
}

// int64 signup_time = 9;
inline void UserBasicInfo::clear_signup_time() {
  signup_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UserBasicInfo::signup_time() const {
  // @@protoc_insertion_point(field_get:user_proto.UserBasicInfo.signup_time)
  return signup_time_;
}
inline void UserBasicInfo::set_signup_time(::google::protobuf::int64 value) {
  
  signup_time_ = value;
  // @@protoc_insertion_point(field_set:user_proto.UserBasicInfo.signup_time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace user_proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::user_proto::UserBasicInfo_Gender> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::user_proto::UserBasicInfo_Gender>() {
  return ::user_proto::UserBasicInfo_Gender_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_user_2eproto_INCLUDED
